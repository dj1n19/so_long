/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   pathfinding_bonus.c                                :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: bgenie <bgenie@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/08/20 15:56:33 by bgenie            #+#    #+#             */
/*   Updated: 2022/10/03 15:31:33 by bgenie           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/so_long_bonus.h"

t_node  *create_node(int x, int y)
{
    t_node  *node;

    node = (t_node *)malloc((sizeof(t_node)));
    if (!node)
        return (NULL);
    node.coord.x = x;
    node.coord.y = y;
    node.next = NULL;
    return (node);    
}

t_node  *get_next_node(t_node *current, t_coord *exit_coord)
{
    int x;
    int y;

    if (current.coord.x < exit_coord.x)
        x = current.coord.x + 1;
    else if (current.coord.x > exit_coord.x)
        x = current.coord.x - 1;
    else
        x = current.coord.x;
    if (current.coord.y < exit_coord.y)
        y = current.coord.y
}

t_coord *get_exit_coord(t_map *map)
{
    int     x;
    int     y;
    t_coord *coord;

    coord = (t_coord *) malloc(sizeof(t_coord));
    if (!coord)
        return (NULL);
    y = 1;
    while (y < map->y - 1)
    {
        y = 0;
        while (x < map->x - 1)
        {
            if (map[y][x] == 'E')
            {
                coord.x = x;
                coord.y = y;
            }
            ++y;
        }
        ++x;
    }
    return (coord);
}

int pathfinding(t_player *player, t_map *map)
{
    t_node  start_node;
    t_coord *exit_coord;

    start_node.coord.x = player->x;
    start_node.coord.y = player->y;
    exit_coord = get_exit_coord(map);
    if (!exit_coord)
        return (0);
    return (0);
}